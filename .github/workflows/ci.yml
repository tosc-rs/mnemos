# Lovingly borrowed from mycelium's CI setup

name: CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: ["main"]

env:
  # disable incremental compilation.
  #
  # incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. however,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # see https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). this should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  # don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  # run `just check`
  check:
    name: just check
    # needs: changed_paths
    # if: needs.changed_paths.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
    - name: install libudev
      run: sudo apt-get update && sudo apt-get install -y libudev-dev
    - name: install rust toolchain
      run: rustup show
    - name: add wasm target
      run: rustup target add wasm32-unknown-unknown
    - uses: olix0r/cargo-action-fmt@ee1ef42932e44794821dab57ef1bf7a73df8b21f
    - uses: actions/checkout@v2
    - uses: extractions/setup-just@v1
    - name: run just check
      run: just check

    # run `just clippy`
  clippy:
    name: just clippy
    # needs: changed_paths
    # if: needs.changed_paths.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
    - name: install libudev
      run: sudo apt-get update && sudo apt-get install -y libudev-dev
    - name: install rust toolchain
      run: rustup show
    - name: add wasm target
      run: rustup target add wasm32-unknown-unknown
    - uses: olix0r/cargo-action-fmt@ee1ef42932e44794821dab57ef1bf7a73df8b21f
    - uses: actions/checkout@v2
    - uses: extractions/setup-just@v1
    - name: run just clippy
      run: just clippy

  # run `just test`
  test:
    name: just test
    needs: check # skip on commits that don't compile.
    # needs: changed_paths
    # if: needs.changed_paths.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
    - name: install libudev and libsdl2-dev
      run: |
        sudo apt-get update \
        && sudo apt-get install -y libudev-dev libsdl2-dev
    - name: install rust toolchain
      run: rustup show
    - name: install nextest
      uses: taiki-e/install-action@nextest
    - uses: actions/checkout@v2
    - uses: extractions/setup-just@v1
    - name: just test
      run: just test

  # (test-host forth3) - run miri tests
  test-host-miri:
    runs-on: ubuntu-latest
    name: cargo miri test (host)
    needs: check
    # TODO(eliza): only run this if forth3 changed?
    # needs: changed_paths
    # if: needs.changed_paths.outputs.should_skip != 'true'
    steps:
    - name: install rust toolchain and miri
      run: |
        rustup toolchain install nightly --component miri
        cargo +nightly miri setup
    - uses: actions/checkout@v3
    - name: cargo miri test (forth3)
      run: |
        cargo +nightly miri test \
          --package forth3 \
          --all-features

  # check code style with `rustfmt`
  rustfmt:
    # needs: changed_paths
    # if: needs.changed_paths.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
    - name: install rust toolchain
      run: rustup show
    - uses: actions/checkout@v2
    - name: run rustfmt
      run: cargo fmt --check

  # check that RustDoc builds
  #
  # See `check` NOTE above for details regarding the excluded crate(s).
  docs:
    # needs: changed_paths
    # if: needs.changed_paths.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
    - name: install libudev
      run: sudo apt-get update && sudo apt-get install -y libudev-dev
    - name: install rust toolchain
      run: rustup show
    - uses: actions/checkout@v2
    - uses: olix0r/cargo-action-fmt@ee1ef42932e44794821dab57ef1bf7a73df8b21f
    - name: run rustdoc
      run: |
        cargo doc \
          --message-format=json \
          --no-deps \
          --all-features \
          --workspace \
          --document-private-items |
          cargo-action-fmt
      env:
        RUSTDOCFLAGS: "--cfg docsrs -Dwarnings"
